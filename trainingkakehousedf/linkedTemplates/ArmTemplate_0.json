{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "trainingkakehousedf"
		},
		"Curation Spark Cluster_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'Curation Spark Cluster'"
		},
		"salesdbsource_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'salesdbsource'"
		},
		"traininglakehouse_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'traininglakehouse'"
		},
		"websitetrackinglogs_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'websitetrackinglogs'"
		},
		"Curation Spark Cluster_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0519-033954-6ush260c"
		},
		"httpsource_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/PacktPublishing/data-Engineering-with-Apache-Spark-Delta-Lake-and-Lakehouse/main/project/prep/iplocation/IP2LOCATION-LITE-DB1.CSV"
		},
		"restsource_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://prepaid.currconv.com/api/v7/convert?"
		},
		"salesdbsource_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "salesdb100-server.database.windows.net"
		},
		"salesdbsource_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "salesdb100-rg"
		},
		"salesdbsource_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "salesadmin"
		},
		"traininglakehouse_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://electraininglakehouse.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Curation Spark Cluster')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3037688599237896.16.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('Curation Spark Cluster_accessToken')]"
					},
					"existingClusterId": "[parameters('Curation Spark Cluster_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/httpsource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('httpsource_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/restsource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('restsource_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/salesdbsource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('salesdbsource_properties_typeProperties_server')]",
					"database": "[parameters('salesdbsource_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('salesdbsource_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('salesdbsource_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/traininglakehouse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('traininglakehouse_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('traininglakehouse_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/websitetrackinglogs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('websitetrackinglogs_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/electroniz_curation_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline will curate data fir the sales database, currency conversion, geo-location, and e-commerce website tracking logs by fetching from the bronze layer and saving it in the silver layer.",
				"activities": [
					{
						"name": "Get Secret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://electrainingkv100.vault.azure.net/secrets/ADLSKEY/fca_live_uQSzhOWqhr4UkMOIpZJ5bH45TpQvl5TfSdpo8Ug0?api-version=7.0",
							"authentication": {
								"type": "UserAssignedManagedIdentity"
							}
						}
					},
					{
						"name": "Run Curation Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Get Secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/andrewh_arhsvcs.com#ext#@andrewharhsvcs.onmicrosoft.com/electroniz_curation_notebook",
							"baseParameters": {
								"STORAGE_ACCOUNT": {
									"value": "@pipeline().parameters.STORAGE_ACCOUNT",
									"type": "Expression"
								},
								"BRONZE_LAYER_NAMESPACE": {
									"value": "@pipeline().parameters.BRONZE_LAYER_NAMESPACE",
									"type": "Expression"
								},
								"SILVER_LAYER_NAMESPACE": {
									"value": "@pipeline().parameters.SILVER_LAYER_NAMESPACE",
									"type": "Expression"
								},
								"STORE_SALES_FOLDER": {
									"value": "@pipeline().parameters.STORE_SALES_FOLDER",
									"type": "Expression"
								},
								"ADLS_FOLDER": {
									"value": "@pipeline().parameters.ADLS_FOLDER",
									"type": "Expression"
								},
								"TABLE_LIST": {
									"value": "@pipeline().parameters.TABLE_LIST",
									"type": "Expression"
								},
								"CURRENCY_LIST": {
									"value": "@pipeline().parameters.CURRENCY_LIST",
									"type": "Expression"
								},
								"CURRENCY_FOLDER": {
									"value": "@pipeline().parameters.CURRENCY_FOLDER",
									"type": "Expression"
								},
								"GEOLOCATION_FOLDER": {
									"value": "@pipeline().parameters.GEOLOCATION_FOLDER",
									"type": "Expression"
								},
								"LOGS_FOLDER": {
									"value": "@pipeline().parameters.LOGS_FOLDER",
									"type": "Expression"
								},
								"ECOMM_FOLDER": {
									"value": "@pipeline().parameters.ECOMM_FOLDER",
									"type": "Expression"
								},
								"ADLS_KEY": {
									"value": "@activity('Get Secret').ouput.value",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Curation Spark Cluster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"STORAGE_ACCOUNT": {
						"type": "string"
					},
					"BRONZE_LAYER_NAMESPACE": {
						"type": "string"
					},
					"SILVER_LAYER_NAMESPACE": {
						"type": "string"
					},
					"ADLS_FOLDER": {
						"type": "string"
					},
					"TABLE_LIST": {
						"type": "string"
					},
					"CURRENCY_LIST": {
						"type": "string"
					},
					"CURRENCY_FOLDER": {
						"type": "string"
					},
					"GEOLOCATION_FOLDER": {
						"type": "string"
					},
					"LOGS_FOLDER": {
						"type": "string"
					},
					"ECOMM_FOLDER": {
						"type": "string"
					},
					"STORE_SALES_FOLDER": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Curation Spark Cluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CurrencyDelimitedText')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "traininglakehouse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "currency/@{item().Currency}/@{formatDateTime(utcNow(), 'yyyy')}/@{formatDateTime(utcNow(),'MM')}/@{formatDateTime(utcNow(), 'HH')}",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/traininglakehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GeoDelimitedTextSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "httpsource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/httpsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GeoDelimitedTextSync')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "traininglakehouse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "geolocation/@{formatDateTime(utcNow(), 'yyyy')}/@{formatDateTime(utcNow(), 'MM')}/@{formatDateTime(utcNow(), 'dd')}/@{formatDateTime(utcNow(), 'HH')}",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/traininglakehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "restsource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "convert?q=USD_@{item().Currency}&compact=ultra&apiKey=pr_aa9ca13e0b4047a98ef36119b0187468",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/restsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesDelimitedText')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "traininglakehouse",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileExt": {
						"type": "string",
						"defaultValue": "csv"
					},
					"FileTime": {
						"type": "string",
						"defaultValue": "@pipeline().TriggerTime"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().FileTime, '.',dataset().FileExt)",
							"type": "Expression"
						},
						"folderPath": {
							"value": "sales/@{activity('Lookup Old Watermark').output.firstRow.table_name}/@{formatDateTime(utcNow(), 'yyyy')}/@{formatDateTime(utcNow(), 'MM')}/@{formatDateTime(utcNow(),'dd')}/@{formatDateTime(utcNow(), 'HH')}",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/traininglakehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TrackingJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "websitetrackinglogs",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "ecommercelogs"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"time": {
							"type": "string"
						},
						"remote_ip": {
							"type": "string"
						},
						"request": {
							"type": "string"
						},
						"response": {
							"type": "integer"
						},
						"agent": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/websitetrackinglogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TrackingJSONSync')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "traininglakehouse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "logs/@{formatDateTime(utcNow(),'yyyy')}/@{formatDateTime(utcNow(),'MM')}/@{formatDateTime(utcNow(),'dd')}/@{formatDateTime(utcNow(),'HH')}",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/traininglakehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/salesbds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "salesdbsource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/salesdbsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/salesdbds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "salesdbsource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/salesdbsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/electroniz_batch_ingestion_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline will ingest data from sales database, currency conversion, geo-location, and ecommerce website tracking",
				"activities": [
					{
						"name": "Get Secret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://electrainingkv100.vault.azure.net/secrets/CURRAPIKEY/989167ad168c46529b8aa940961143dc?api-version=7.5",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Find SalesDB Tables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Geo-location Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT QUOTENAME(table_schema)+'.'+QUOTENAME(table_name) AS Table_Name FROM information_Schema.tables WHERE table_name not in ('watermarktable', 'database_firewall_rules')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "salesdbds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Find SalesDB Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Find SalesDB Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup Old Watermark",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM [dbo].[watermarktable] AS WatermarkValue where table_name='@{item().Table_Name}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "salesdbds",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Lookup New Watermark",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT MAX(updated_at) as NewWatermarkvalue FROM @{item().Table_Name}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "salesdbds",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "Copy Table Data",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup Old Watermark",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup New Watermark",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().Table_Name} where updated_at > '@{activity('Lookup Old Watermark').output.firstRow.watermark_value}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "salesbds",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SalesDelimitedText",
											"type": "DatasetReference",
											"parameters": {
												"FileExt": "csv",
												"FileTime": "@pipeline().TriggerTime"
											}
										}
									]
								},
								{
									"name": "Update Watermark",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Table Data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_write_watermark]",
										"storedProcedureParameters": {
											"LastModifiedtime": {
												"value": {
													"value": "@{activity('Lookup New Watermark').output.firstRow.NewWatermarkvalue}",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"TableName": {
												"value": {
													"value": "@{activity('Lookup Old Watermark').output.firstRow.table_name}:",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "salesdbsource",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Website Tracking Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Currency",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"prefix": "electroniz_access"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "TrackingJSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TrackingJSONSync",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Website Tracking Logs",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Website Tracking Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TrackingJSON",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Geo-location Mapping",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "GeoDelimitedTextSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "GeoDelimitedTextSync",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Find Currencies",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "For Each Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT currency FROM [dbo].[store_orders] WHERE currency <> 'USD'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "salesdbds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Currency",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Find Currencies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Find Currencies').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Currency Value",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestResource1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CurrencyDelimitedText",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-14T07:30:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/salesdbds')]",
				"[concat(variables('factoryId'), '/datasets/TrackingJSON')]",
				"[concat(variables('factoryId'), '/datasets/TrackingJSONSync')]",
				"[concat(variables('factoryId'), '/datasets/GeoDelimitedTextSource')]",
				"[concat(variables('factoryId'), '/datasets/GeoDelimitedTextSync')]",
				"[concat(variables('factoryId'), '/datasets/salesbds')]",
				"[concat(variables('factoryId'), '/datasets/SalesDelimitedText')]",
				"[concat(variables('factoryId'), '/linkedServices/salesdbsource')]",
				"[concat(variables('factoryId'), '/datasets/RestResource1')]",
				"[concat(variables('factoryId'), '/datasets/CurrencyDelimitedText')]"
			]
		}
	]
}